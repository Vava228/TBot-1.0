#!/usr/bin/python
# -*- coding: utf-8 -*-

import telebot
from telebot import types
import data
from config import TOKEN, ow_token
import datetime
import requests
import json
from bs4 import BeautifulSoup
import csv


date_today = datetime.datetime.now().strftime('%Y-%m-%d')
time_today = datetime.datetime.now().strftime('%Y-%m-%d %H:%M')

emoji = {
    "News": "üì∞",
    "Joke": "üòÜ",
    "Vogue": "üëó",
    "Support": "‚Åâ",
    "Bitcoin": "‚Çø",
    "Money": "üí∞",
    "Umbrella": "‚òÇ",
    "Clear": "–Ø—Å–Ω–æ \U00002600",
    "Clouds": "–û–±–ª–∞—á–Ω–æ \U00002601",
    "Rain": "–î–æ–∂–¥—å \U00002614",
    "Drizzle": "–î–æ–∂–¥—å \U00002614",
    "Thunderstorm": "–ì—Ä–æ–∑–∞ \U000026A1",
    "Snow": "–°–Ω–µ–≥ \U0001F328",
    "Mist": "–¢—É–º–∞–Ω \U0001F32B"
}

bot = telebot.TeleBot(TOKEN)
@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç! –Ø - –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –±–æ—Ç –í–∞–≤–∞ - –ø–æ–º–æ—â–Ω–∏–∫, —Å–ø–æ—Å–æ–±–Ω—ã–π:\n"
                                    f"- –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –ø–æ–≥–æ–¥—É –∏ —Å–∫–∞–∑–∞—Ç—å –µ—ë –≤–∞–º;\n"
                                    f"- –¥–∞—Ç—å –≤–∞–º —Å–≤–µ–∂–∞–π—à–∏–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –∏ –∫—Ä–∏–ø—Ç–æ–±–∏—Ä–∂–∏;\n"
                                    f"- –¥–∞—Ç—å –≤–∞–º –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–º–µ—à–Ω–æ–π –∞–Ω–µ–∫–¥–æ—Ç(—Ä–∞–∑ –≤ –¥–µ–Ω—å!);\n"
                                    f"- –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ—á–∏—Ç–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –º–∏—Ä–∞ –∏–ª–∏ –º–æ–¥—ã!\n"
                                    f"–ê –µ—Å–ª–∏ –≤–∞—Å –≤—Å—ë –±–µ—Å–∏—Ç, –Ω–µ —Å –∫–µ–º –ø–æ–±–µ—Å–µ–¥–æ–≤–∞—Ç—å –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ö–æ—á–µ—Ç—Å—è –ø–æ–º–æ—á—å —ç—Ç–æ–º—É –ø—Ä–æ–µ–∫—Ç—É - –ø–∏—à–∏ –º–Ω–µ: @VavaRus\n"
                                    f"–ò –∫—Å—Ç–∞—Ç–∏, —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å –∫–Ω–æ–ø–∫–∏, –Ω–∞–±–µ—Ä–∏\n ***( /button )***")

@bot.message_handler(commands=['button', 'start'])
def lalala(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton(f"–î–∞–π –ø–æ–≥–æ–¥—É! {emoji['Umbrella']}")
    item2 = types.KeyboardButton(f"–î–∞–π –∫—É—Ä—Å –≤–∞–ª—é—Ç {emoji['Money']}")
    item3 = types.KeyboardButton(f"--- ---? {emoji['Joke']}")
    item4 = types.KeyboardButton(f"–ß–µ–≥–æ –Ω–æ–≤–æ–≥–æ? {emoji['News']}, {emoji['Vogue']}")
    item5 = types.KeyboardButton(f"–î–∞–π—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∫—É! {emoji['Support']}")
    markup.add(item1, item2, item3, item4, item5)

    bot.send_message(message.chat.id, '–ß–µ–≥–æ –ø–æ—á–∏—Ç–∞–µ–º?', reply_markup=markup)

@bot.message_handler(content_types='text')
def message_reply(message):
    if message.text == f"–î–∞–π –ø–æ–≥–æ–¥—É! {emoji['Umbrella']}":
        markup = types.InlineKeyboardMarkup(row_width=3)
        item1 = types.InlineKeyboardButton("–ú–æ—Å–∫–≤–∞", callback_data='moscow')
        item2 = types.InlineKeyboardButton("–ü–æ–¥–æ–ª—å—Å–∫", callback_data='podolsk')
        item3 = types.InlineKeyboardButton("–ö—É—Ä—Å–∫", callback_data='kursk')

        markup.add(item1, item2, item3)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥:", reply_markup=markup)
    elif message.text == f"–î–∞–π –∫—É—Ä—Å –≤–∞–ª—é—Ç {emoji['Money']}":
        markup = types.InlineKeyboardMarkup(row_width=2)
        item1 = types.InlineKeyboardButton(f"–ë–∞–∑–æ–≤. –≤–∞–ª—é—Ç–∞ {emoji['Money']}", callback_data='money')
        item2 = types.InlineKeyboardButton(f"–ë–∏—Ç–æ–∫ {emoji['Bitcoin']}", callback_data='bitcoin')

        markup.add(item1, item2,)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã, –∫–æ—Ç–æ—Ä–æ–π —Ç–µ–±–µ –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å:", reply_markup=markup)
    elif message.text == f"--- ---? {emoji['Joke']}":
        pass
    elif message.text == f"–ß–µ–≥–æ –Ω–æ–≤–æ–≥–æ? {emoji['News']}, {emoji['Vogue']}":
        markup = types.InlineKeyboardMarkup(row_width=2)
        item1 = types.InlineKeyboardButton(f"–ù–æ–≤–æ—Å—Ç–∏ {emoji['News']}", callback_data='news')
        item2 = types.InlineKeyboardButton(f"–ú–æ–¥–∞ {emoji['Vogue']}", callback_data='vogue')

        markup.add(item1, item2, )
        bot.send_message(message.chat.id, "–í—ã–±–∏—Ä–∞–π, —á—Ç–æ –±—É–¥–µ–º —á–∏—Ç–∞—Ç—å:", reply_markup=markup)
    elif message.text == f"–î–∞–π—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∫—É! {emoji['Support']}":
        bot.send_message(message.chat.id, 'üíïüíïüíï\n'
                                          '–î–æ–±—Ä—ã–π –¥–µ–Ω—å, {0.first_name}!\n'
                                          '–Ø —Ö–æ—á—É, —á—Ç–æ–±—ã —Ç—ã —Ä–∞—Å—Å–∫–∞–∑–∞–ª –æ–±–æ –≤—Å—ë–º –º–æ–µ–º—É —Ö–æ–∑—è–∏–Ω—É:\n'
                                          '***\n'
                                          '@VavaRus\n'
                                          '***\n'
                                          '–û–Ω –≤—Å—ë –ø–æ–π–º—ë—Ç, –æ—Ç–≤–µ—Ç–∏—Ç –∏ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ!\n'
                                          'üíïüíïüíï'.format(message.from_user, bot.get_me()))
    else:
        bot.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é... üò¢")

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    #–æ–±—Ä–∞–±–æ—Ç–∫–∞ def weather():
    if call.message:
        if call.data == 'moscow':
            city_name = 'Moscow'
            data.weather(city_name, ow_token)
            with open(f'data/weather/{city_name}_{date_today}.json', 'r') as file:
                d = json.load(file)
                humidity = d["humidity"]
                pressure = d["pressure"]
                wind = d["wind"]
                city = d["city"]
                cur_weather = d["temp"]
                wd = d['wd']
            bot.send_message(call.message.chat.id, f"***\n"
                                                   f"***{datetime.datetime.now().strftime('%Y-%m-%d %H:%M')}***\n"
               f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_weather}C¬∞, {wd}\n"
               f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º.—Ä—Ç.—Å—Ç\n–í–µ—Ç–µ—Ä: {wind} –º/—Å\n"
                                                   f"***\n"
               f"–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!\n"
                                                   f"***\n")
        elif call.data == 'podolsk':
            city_name = 'Podolsk'
            data.weather(city_name, ow_token)
            with open(f'data/weather/{city_name}_{date_today}.json', 'r') as file:
                d = json.load(file)
                humidity = d["humidity"]
                pressure = d["pressure"]
                wind = d["wind"]
                city = d["city"]
                cur_weather = d["temp"]
                wd = d['wd']
            bot.send_message(call.message.chat.id, f"***\n"
                                                   f"***{datetime.datetime.now().strftime('%Y-%m-%d %H:%M')}***\n"
               f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_weather}C¬∞, {wd}\n"
               f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º.—Ä—Ç.—Å—Ç\n–í–µ—Ç–µ—Ä: {wind} –º/—Å\n"
                                                   f"***\n"
               f"–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!\n"
                                                   f"***\n")
        elif call.data == 'kursk':
            city_name = 'Kursk'
            data.weather(city_name, ow_token)
            with open(f'data/weather/{city_name}_{date_today}.json', 'r') as file:
                d = json.load(file)
                humidity = d["humidity"]
                pressure = d["pressure"]
                wind = d["wind"]
                city = d["city"]
                cur_weather = d["temp"]
                wd = d['wd']
            bot.send_message(call.message.chat.id, f"***\n"
                                                   f"***{datetime.datetime.now().strftime('%Y-%m-%d %H:%M')}***\n"
               f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_weather}C¬∞, {wd}\n"
               f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º.—Ä—Ç.—Å—Ç\n–í–µ—Ç–µ—Ä: {wind} –º/—Å\n"
                                                   f"***\n"
               f"–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!\n"
                                                   f"***\n")
        # –æ–±—Ä–∞–±–æ—Ç–∫–∞ def course():
        elif call.data == 'money':
            data.course_money()
            with open(f'data/course/_{date_today}_course_of_Money.json', 'r') as file:
                d = json.load(file)
                time = d['time']
                eur = d['eur']
                usd = d['usd']
                c_b = d['c_b']
            bot.send_message(call.message.chat.id, f"***\n"
                                                   f"–ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞ –∏ –µ–≤—Ä–æ:\n"
                                                   f"***{time}***\n"
                                                   f"(–ü–†–ï–î–û–°–¢–ê–í–õ–ï–ù–û {c_b})\n"
                                                   f"1 USD : {usd} —Ä—É–±–ª–µ–π\n"
                                                   f"1 EUR : {eur} —Ä—É–±–ª–µ–π\n"
                                                   f"***")
        # –æ–±—Ä–∞–±–æ—Ç–∫–∞ def bit_course():
        elif call.data == 'bitcoin':
            data.bit_course()
            with open(f'data/course/_{date_today}_bit_course.json', 'r') as file:
                d = json.load(file)
                btc = d['btc']
                ltc = d['ltc']
                eth = d['eth']
            bot.send_message(call.message.chat.id, f'***\n'
                                                   f'***{date_today}***\n'
                                                   f'–ö—É—Ä—Å –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç:\n'
                                                   f'BTC : {btc} USD,\n'
                                                   f'LTC : {ltc} USD,\n'
                                                   f'ETH : {eth} USD,\n'
                                                   f'***')
        # –æ–±—Ä–∞–±–æ—Ç–∫–∞ def fashion_news():
        elif call.data == 'vogue':
            data.vogue()
            with open(f'data/news/_{date_today}_Vogue_.json', 'r') as file:
                d = json.load(file)
                header1 = d['header1']
                href1 = d['href1']
                header2 = d['header2']
                href2 = d['href2']
                header3 = d['header3']
                href3 = d['href3']

            bot.send_message(call.message.chat.id, f'***\n'
                                                   f'–ù–æ–≤–æ—Å—Ç–∏ –º–æ–¥—ã:\n'
                                                   f'- {header1};\n'
                                                   f'–ß–∏—Ç–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞:\n'
                                                   f'{href1};\n'
                                                   f'- {header2};\n'
                                                   f'–ß–∏—Ç–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞:\n'
                                                   f'{href2};\n'
                                                   f'- {header3};\n'
                                                   f'–ß–∏—Ç–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞:\n'
                                                   f'{href3}\n'
                                                   f'***')

        # –æ–±—Ä–∞–±–æ—Ç–∫–∞ def news():
        elif call.data == 'news':
            data.news()
            with open(f'data/news/_{date_today}_News_.json', 'r') as file:
                d = json.load(file)
                note1 = d['note1']
                note2 = d['note2']
                note3 = d['note3']
                note4 = d['note4']
            bot.send_message(call.message.chat.id, f'***\n'
                                                   f'–ù–æ–≤–æ—Å—Ç–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: \n'
                                                   f'- {note1};\n'
                                                   f'- {note2};\n'
                                                   f'- {note3};\n'
                                                   f'- {note4};\n'
                                                   f'***')



bot.polling(none_stop=True)






